Automaton: examplebt
	Class: master

	States: 
		State btinit 				do init bt "NXT2" 
		State wander 				do 
		State sonarobstacle			do consume package, print "sonar sees something", beep
		State colorfound			do consume package, print "new color found", beep, beep, send action done
		State finished 				do consume package, print "all done"
		State wacht				    do consume package
	Arrows: 
		Arrow btinit -> wander			if (and true)

		Arrow wander -> sonarobstacle		if (and receive sonar)
		Arrow sonarobstacle -> wander		if (and timeout 3 sec)

		Arrow wander -> colorfound		if (and receive found new color)
		Arrow colorfound -> wacht		if (and timeout 3 sec)
		Arrow wacht -> wander			if (and receive action done)
		Arrow wacht -> wacht				if (and receive found new color) (and receive all done) (and receive sonar) //als er een afwijkend pakketje wordt gevonden

		Arrow wander -> finished 		if (and receive all done)
		
	
	Start state: btinit
	End state: finished
	
	/*Automaton: examplebt
	Class: master

	States: 
		State btinit 				do init bt "Rover2" 
		State wander 				do 
		State sonarobstacle			do consume package, print "sonar sees something", beep
		State colorfound			do consume package, print "new color found", beep, beep, send action done
		State finished 				do consume package, print "all done"
		State wacht				    do consume package
	Arrows: 
		Arrow btinit -> wander			if (and true)

		Arrow wander -> sonarobstacle		if (and receive sonar)
		Arrow sonarobstacle -> wander		if (and timeout 3 sec)

		Arrow wander -> colorfound		if (and receive found new color)
		Arrow colorfound -> wander		if (and receive action done)
		Arrow colorfound -> wacht		if (and timeout 10 sec)
		
		Arrow wacht -> wander			if (and receive action done)
		Arrow wacht -> wacht				if (and receive found new color) (and receive all done) (and receive sonar) //als er een afwijkend pakketje wordt gevonden

		Arrow wander -> finished 		if (and receive all done)
		
	
	Start state: btinit
	End state: finished
*/
