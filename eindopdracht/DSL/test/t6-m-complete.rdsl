Automaton: examplebt
	Class: master

	States: 
		State btinit				do init bt "slavename" 
		State wander				do drive forwards INF speed 200 
		State problemLeft			do stop, drive backwards duration 1 sec speed 100, turn right (15,90)
		State problemRight			do stop, drive backwards duration 1 sec speed 100, turn left (15,90)
		State sonarobstacle			do consume package, stop, drive backwards duration 1 sec speed 50, turn left (15,180)
		State colorfound			do consume package, stop, park, send action done
		State finished				do consume package, stop, print "all done"
		State wacht					do consume package
		State consumethenwander		do consume package
	Arrows: 
		Arrow btinit -> wander				if (and true)
		Arrow wander -> problemLeft			if (and lightsensor left reads white) (and bumper left is pressed)
		Arrow problemLeft -> wander			if (and lightsensor left reads black bumper left is not pressed)
		Arrow problemLeft -> problemLeft 	if (and lightsensor left reads white) (and bumper left is pressed)
		Arrow wander -> problemRight 		if (and lightsensor right reads white) (and bumper right is pressed)
		Arrow problemRight -> problemRight 	if (and lightsensor right reads white) (and bumper right is pressed)
		Arrow problemRight -> wander 		if (and lightsensor right reads black bumper right is not pressed)
		Arrow wander -> sonarobstacle		if (and receive sonar)
		Arrow sonarobstacle -> wander		if (and true)
		Arrow wander -> colorfound			if (and receive found new color)
		Arrow colorfound -> wacht			if (and true)
		Arrow wacht -> consumethenwander	if (and receive action done)
		Arrow consumethenwander -> wander	if (and true)
		Arrow wacht -> wacht				if (and receive sonar) (and receive all done) (and receive found new color) //als er een afwijkend pakketje wordt gevonden

		Arrow wander -> finished 		if (and receive all done)
		
	
	Start state: btinit
	End state: finished
